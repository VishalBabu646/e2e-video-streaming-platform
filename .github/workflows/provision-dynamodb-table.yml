name: Provision DynamoDB Tables

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment name (dev, staging, prod)"
        required: true
        default: "dev"

jobs:
  provision:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Create DynamoDB tables
      run: |
        ENV="${{ github.event.inputs.environment }}"

        USERS_TABLE="users-${ENV}"
        VIDEOS_TABLE="videos-${ENV}"

        echo "Creating table: $USERS_TABLE"
        aws dynamodb create-table \
          --table-name "$USERS_TABLE" \
          --attribute-definitions AttributeName="username",AttributeType="S" \
          --key-schema AttributeName="username",KeyType=HASH \
          --billing-mode PAY_PER_REQUEST \
          --tags Key=Environment,Value="$ENV" Key=ManagedBy,Value=GitHubActions || \
          echo "$USERS_TABLE already exists or creation failed"

        echo "Creating table: $VIDEOS_TABLE"
        aws dynamodb create-table \
          --table-name "$VIDEOS_TABLE" \
          --attribute-definitions AttributeName="videoId",AttributeType="S" \
          --key-schema AttributeName="videoId",KeyType=HASH \
          --billing-mode PAY_PER_REQUEST \
          --tags Key=Environment,Value="$ENV" Key=ManagedBy,Value=GitHubActions || \
          echo "$VIDEOS_TABLE already exists or creation failed"

    - name: Verify tables
      run: |
        ENV="${{ github.event.inputs.environment }}"
        for TABLE in ${USERS_TABLE} ${VIDEOS_TABLE}; do
          aws dynamodb describe-table --table-name "$TABLE" \
            && echo "$TABLE exists" \
            || echo "$TABLE not found"
        done
